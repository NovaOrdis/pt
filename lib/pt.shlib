#!/bin/bash

function pt-help() {

    local help_file
    help_file=$(dirname $0)/../lib/pt.txt
    [ ! -f ${help_file} ] && fail "help file ${help_file} not found, $(basename $0) was not installed correctly"
    cat ${help_file}
}

#
# Java functions
#

#function get-java-pid() {
#
#    IFS="$(printf '\n\r')"
#    local pid=""
#    for line in $(tasklist); do
#       if echo "${line}" | grep -q "^java.exe"; then
#           pid=$(echo "${line}" | sed -e 's/^java\.exe[ \t]*\([0-9]*\)[ \t].*$/\1/')
#           break;
#       fi
#    done
#    IFS="$(printf ' \t\n')"
#    echo "${pid}"
#}

#
# JBoss-related functions
#

#
# return the content of JBOSS_HOME at stdout or fails if the environment variable is not found, or
# it contains an invalid value
#
function get-jboss-home() {

    [ -z "${JBOSS_HOME}" ] && fail "'JBOSS_HOME' environment variable not found"
    [ -d "${JBOSS_HOME}" ] || fail "'JBOSS_HOME' environment variable content ${JBOSS_HOME} is not a directory"
    echo ${JBOSS_HOME}
}

#
# return 0 if the JBoss instance was running and it was successfully stopped, 1 if the JBoss instance was
# not running. Fails if the JBoss instance was running but it failed to stop.
#
function stop-jboss() {

    info "stopping the JBoss service ..."

    net stop WFAS81SVC

    #
    # net returns:
    #   0 upon successful stop
    #   2 if no started JBoss service was found
    #

    local result=$?

    if [ ${result} -eq 2 ]; then
        #
        # service was not started
        #
        return 1
    fi

    debug "net return value: ${result}"

    #
    # fail if we failed to stop a running JBoss instance
    #

    if [ ${result} -ne 0 ]; then
        #
        # something went wrong while stopping JBoss with net
        #
        fail "something went wrong while stopping JBoss as a Windows service, net return code ${result}"
        return 1
    fi

    #
    # successfully stopped a running instance
    #
    return 0
}

#
# returns 0 upon successful startup, 1 if the JBoss instance was already started. Fails if JBoss fails to start.
#
function start-jboss() {

    info "starting the JBoss service ..."

    net start WFAS81SVC

    #
    # net returns:
    #
    #     0 upon successful startup
    #     2 if the service was previously started
    #

    local result=$?

    if [ ${result} -eq 2 ]; then
        #
        # service already started
        #
        return 1
    fi

    debug "net return value ${result}"

    #
    # fail if we failed to start a JBoss instance
    #

    if [ ${result} -ne 0 ]; then
        #
        # something went wrong while starting JBoss with net
        #
        fail "something went wrong while starting JBoss as a Windows service, net return code ${result}"
        return 1
    fi

    #
    # successfully started the instance
    #
    return 0
}

#
# Expects a directory, and remove all files and sub-directories from that directory.
#
# Return 0 if logs were cleaned, 1 if no logs to clean were found and it fails if anything fails during
# the cleaning process
#
function remove-files() {

    local dir=$1
    [ -z "${dir}" ] && fail "'dir' not provided"
    [ -d "${dir}" ] || fail "${dir} is not a valid directory"

    local content
    content=$(ls -m "${dir}")

    if [ -z "${content}" ]; then
        #
        # empty directory
        #
        return 1
    fi

    (cd "${dir}"; rm *) && info "removed all files from ${dir}" || fail "failed to remove files from ${dir}"

    return 0
}




